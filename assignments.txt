Assignments: 2017-JAN-09:

Create git hub public repository, and push some files to that repository
Read about python features

Assignments on 2017-JAN-10:

Read about datatypes in python 
Add comments to the cells in the file datatypes.ipynb and push to github repository

Assignments on 2017-JAN-11:

Add comments to the cells in the file printstament, raw_input.ipynb file and push to github repository
Read string functions


Assignments on 2017-JAN-12:
Add comments to the cells in the file boolean expression.ipynb file and push to github repository


1. write a program to findout 
2. write a program to chek given substring is there in actual string or not? (search should be case insensitive)
3. take a number from the user and check whether even or odd
4. take a number from the user and check whether it is prime?
5. take a string from the user and check contains only digits or not?
6. take a string from the user and check contains only  alphabets or not?
7. take a string from the user and check contains only  special chars or not?
8. take a string from the user and check contains only  capiatl letters or not?
9. take a string from the user and check contains only  small letters or not?
10. Show the below menu to the user until and until user select quit and display corresponding os message

'''
Menu:
1. windows
2. Linux
3. Mac
4. quit
'''

11. take a string from the user and check contains atleast one digit or not?
12. take a string from the user and check contains atleast one alphabets or not?
13. take a string from the user and check contains atleast one chars or not?
14. take a string from the user and check contains atleast one capital letter or not?
15. take a string from the user and check contains atleast one small letter or not?
16. Take the input from the user for(Total number of people, toatl number of busses, Number of seats for bus). Based on the input
	Deside whether there is sufficient busses or not and give solution for how many extra busses required.
17. Print the first 100 odd numbers
18. Determine the factors of a number entered  by the user
19. Play a number guessing game (User enters a guess, you print YES or Higher or Lower)
20. Take two numbers from the user a,b check whether a is divisible by b or not?
21. Given an age, figure out whether someone's a baby, toddler, child, teenager, adult or old codger.
22. Find the sum of all the multiples of 3 or 5 below 1000

23. Write a program to findout big of two numbers
24. Write a program to findout biggest number in the given numbers.
25. findout third occurance of given substring
26. findout nth occurance of given substring


Assigments on 2017-JAN-16

27. Taake some single digit numbers from the user and findout min, maximum, sum, average
28. WAP> 10 -> 000010
       100 ->  000100
      1000 ->  001000
  2345678  ->  2345678
29. names  ="emp1,emp2,emp3,emp4" iterate through the employee names.
30. Take actuual string, soucrce string, destination string. replce first nth occurances of soucestring with destination string of actual string
31. Taake numbers from the user and findout min, maximum, sum, average
32. l=[10,20,30,[40,50,60],70,[80,90,20]]. Convert this list as sigle dimentiona list
33. input: "google" print count of each character 
34. Convert n dimentional list to single dimentiona list.
35. l=[1,2,3] just make it as a string.
36. l=[1,2,3,[4,5,6],7,[8,9,10]] for single dimentional list
37. l=['a','A','b','B','d','D','c','C'] WAP to find out case insensitive count and case insensitive search for an element.
38. l=['a','A','b','B','d','D','c','C']  sort the list properly
39. find the start position of the largest block of repeated characters in a given string
40. WAP to find union and intersection of lists.
41. input: fun(5) output: [1,2,3,4,3,2,1]
42.input fun('abc') output: [[],][a],[b],[c],[a,b],[b,c],[c,a],[a,b,c]]
43. Remove duplicates from the list: a=[1,2,3,2,3,4,1,,3,4]
44. l=['1','2','3'] get the sum of the list
45. l1=[1,2,3,4] l2=[5,6,7,8] sum of two lists
46. Find third max value of element in a list with soring and without sorting a list.
47. Input = ["1/1","1/2","1/3","1/4","2/5","2/6","2/8"] Output = [['1/1-4'], ['2/5-6'], ['2/8']]
48. l=[1,2,3,5,7,8,9,10,11,12,13,20,22,23,24,25,26,27,20,21,22,4] output = [[1, 2, 3], [5], [7, 8, 9, 10, 11, 12, 13], [20], [22, 23, 24, 25, 26, 27], [20, 21, 22], [4]]
49. input = 1,2,3,4,5,6,8,10 output = odd,even,odd,even,odd,even,even,even
50. input n=3 
    output: 	111
		101
		111


Assignments on 2017-JSN-17

51. input: google
	output: {'g':2,'o':2,'l':1,'e':1} use dictionary comprehension
52. keys=['k1','k2'], values = ['v1','v2'] form a dictionary.
53. Sort the list marks = [("mohan", 80), ("satish", 90), ("purnesh", 40), ("venkat", 30)] acording to descending order of marks
54. write a function to get dynamic list for floating numbers also based on strat and end and step parameters
55. find out all perfect numbers in given range
56. WAP to do all stack operations using lists
57. WAP to do all queue operations using lists
58. WAP to remove n occurances of specified element from a list







mail to: sudhakar.donkena@nexiilabs.com




 



